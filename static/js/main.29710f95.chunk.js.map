{"version":3,"sources":["state/tokens/actionTypes.ts","state/repositories/actionTypes.ts","state/tokens/reducer.ts","state/issues/actionTypes.ts","state/repositories/reducer.ts","state/issues/reducer.ts","state/store.ts","state/utils/stateStorage.ts","components/common/Theme.tsx","components/tokens/TokenItem.tsx","components/tokens/TokenList.tsx","components/tokens/styles/TokenDialog.ts","state/utils/actionHelpers.ts","components/tokens/containers/WithTokens.tsx","constants/config.ts","state/utils/fetcher.ts","state/repositories/service.ts","state/issues/service.ts","state/issues/actions.ts","state/repositories/actions.ts","state/tokens/actions.ts","components/tokens/TokenDialog.tsx","components/common/styles/Header.ts","components/common/Header.tsx","components/repositories/containers/WithRepositories.tsx","components/repositories/RepositoryListItem.tsx","components/repositories/styles/ListView.ts","components/issues/containers/WithIssues.tsx","components/issues/styles/ListItem.ts","components/issues/IssueListItem.tsx","components/issues/DraggableIssueListItem.tsx","components/issues/styles/ListView.ts","components/issues/IssuesListView.tsx","components/common/styles/EmptyState.ts","components/common/EmptyState.tsx","components/repositories/RepositoriesListView.tsx","components/AppStyles.ts","components/App.tsx","index.tsx"],"names":["ActionTypes","initialState","collection","selectedToken","undefined","tokens","state","arguments","length","action","Object","toConsumableArray","type","ADD_NEW_TOKEN","newToken","id","uuidv4","token","payload","unshift","objectSpread","SELECT_TOKEN","find","DELETE_TOKEN","isDeletingSelectedToken","filter","selectedRepository","isLoading","repositories","FETCH_REPOSITORIES","FETCH_REPOSITORIES_SUCCESS","FETCH_REPOSITORIES_ERROR","SELECT_REPOSITORY","repository","priority","reorderIssuePriority","startIndex","endIndex","newPriority","_newPriority$splice","splice","removed","slicedToArray","normalizeIssues","issues","reduce","memo","issue","FETCH_ISSUES","FETCH_ISSUES_SUCCESS","isEmpty","map","defineProperty","FETCH_ISSUES_ERROR","REORDER_ISSUE_PRIORITY","_action$payload","localStorageState","serializedState","localStorage","getItem","JSON","parse","_unused2","loadState","rootReducer","combineReducers","theme","createMuiTheme","palette","primary","main","grey","secondary","pink","TokenItem","handleSelect","e","_this$props","_this","props","onSelect","handleDelete","_this$props2","onDelete","_this$props3","this","isSelected","react_default","a","createElement","index_es","button","selected","onClick","VpnKey_default","aria-label","Delete_default","Component","TokenList","onSelectToken","onDeleteToken","tokens_TokenItem","key","styles","root","form","display","align-items","justify-content","padding","divider","margin","input","width","createAction","Cmp","CONFIG","Fetcher","url","isAbsoluteUrl","options","resourUrl","concat","fetch","headers","Authorization","Cookies","get","then","response","ok","json","catch","console","error","Error","Service","fetchRepositories","_fetchRepositories","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","fetchIssues","_fetchIssues","_x","ActionCreators","fetchIssuesSuccess","fetchIssuesError","Actions","_ref","dispatch","getState","replace","sent","t0","_x2","selectRepository","fetchRepositoriesSuccess","fetchRepositoriesError","IssueActions","addNewToken","selectToken","deleteToken","set","RepositoryActions","mapStateToProps","mapDispatchToProps","TokenActions","TokenDialog","handleClose","history","location","newSearch","search","pathname","handleAddToken","preventDefault","setState","handleChange","target","value","classes","Dialog_default","open","isOpen","onClose","className","maxWidth","fullWidth","DialogTitle_default","onSubmit","TextField_default","label","onChange","variant","tokens_TokenList","includes","withRouter","withStyles","connect","justifyContent","tokenButton","Header","color","component","Link","assign","to","tokens_TokenDialog","isLoadingIssues","hasIssues","RepositoryListItem","alignItems","alt","owner","login","title","src","avatar_url","name","description","transition","borderRight","ownProps","match","params","repository_id","isDragging","opacity","secondaryText","body","fontSize","createdAt","updatedAt","IssueListItem","renderAssignee","renderSecondaryText","updatedAtText","createdAtText","assignee","avatarUrl","Face_default","date","moment","created_at","format","relativeDate","updated_at","fromNow","DraggableIssueListItem","getClassName","cn","_this2","index","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","issues_IssueListItem","border","position","isDraggingOver","borderColor","light","reorderingHelperText","top","left","reorderingHelperIcon","marginRight","IssuesListView","_cn","onDragEnd","result","destination","source","droppableId","Info_default","issues_DraggableIssueListItem","_Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","WithIssues","height","emptyStateCardContent","flexDirection","emptyStateCardIcon","EmptyState","text","Warning_default","RepositoriesListView","Fragment","repositories_RepositoryListItem","es_Route","path","common_EmptyState","WithRepositories","contentContainer","minHeight","createBrowserHistory","store","createStore","applyMiddleware","thunk","routerMiddleware","subscribe","throttle","setItem","stringify","_unused","warn","saveState","configureStore","App","Router","react_redux_es","common_Header","Switch","Route","Redirect","from","appStyles","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.29710f95.chunk.js","sourcesContent":["export enum ActionTypes {\n  ADD_NEW_TOKEN = 'tokens.add',\n  SELECT_TOKEN = 'tokens.select',\n  DELETE_TOKEN = 'tokens.delete',\n}\n\nexport default ActionTypes;","export enum ActionTypes {\n  FETCH_REPOSITORIES = 'repositories.fetch.request',\n  FETCH_REPOSITORIES_SUCCESS = 'repositories.fetch.success',\n  FETCH_REPOSITORIES_ERROR = 'repositories.fetch.error',\n\n  SELECT_REPOSITORY = 'repositories.select',\n}\n\nexport default ActionTypes;\n","import uuidv4 from 'uuid/v4';\n\nimport ActionTypes from './actionTypes';\nimport { TokenActions } from './actions';\n\nconst initialState: State['tokens'] = {\n  collection: [],\n  selectedToken: undefined,\n}\n\nconst tokens = (state = initialState, action: TokenActions) => {\n  const collection = [...state.collection];\n\n  switch(action.type) {\n    case ActionTypes.ADD_NEW_TOKEN:\n      const newToken = { id: uuidv4(), token: action.payload.token };\n      collection.unshift(newToken);\n      return {\n        ...state,\n        collection,\n      };\n    case ActionTypes.SELECT_TOKEN:\n      return {\n        ...state,\n        selectedToken: state.collection.find((token) => token.id === action.payload.id)\n      }\n    case ActionTypes.DELETE_TOKEN:\n      const isDeletingSelectedToken = !!state.selectedToken && state.selectedToken.id === action.payload.id;\n      return {\n        ...state,\n        collection: state.collection.filter((token) => token.id !== action.payload.id),\n        selectedToken: isDeletingSelectedToken ? undefined : state.selectedToken\n      }\n    default:\n      return state;\n  }\n};\n\nexport default tokens;\n","export enum ActionTypes {\n  FETCH_ISSUES = 'issues.fetch.request',\n  FETCH_ISSUES_SUCCESS = 'issues.fetch.success',\n  FETCH_ISSUES_ERROR = 'issues.fetch.error',\n\n  REORDER_ISSUE_PRIORITY = 'issues.priority.reorder'\n}\n\nexport default ActionTypes;\n","import ActionTypes from './actionTypes';\nimport { RepositoryActions } from './actions';\n\nconst initialState: State['repositories'] = {\n  collection: [],\n  selectedRepository: undefined,\n  isLoading: false,\n}\n\nconst repositories = (state = initialState, action: RepositoryActions) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_REPOSITORIES:\n      return {...state, isLoading: true }; \n    case ActionTypes.FETCH_REPOSITORIES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        collection: action.payload.repositories\n      };\n    case ActionTypes.FETCH_REPOSITORIES_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case ActionTypes.SELECT_REPOSITORY:\n      return {\n        ...state,\n        selectedRepository: state.collection.find((repository) => repository.id === action.payload.id)\n      }\n    default:\n      return state;\n  }\n};\n\nexport default repositories;\n","import isEmpty from 'lodash/isEmpty';\n\nimport ActionTypes from './actionTypes';\nimport { IssueActions } from './actions';\n\nconst initialState: State['issues'] = {\n  collection: {},\n  isLoading: false,\n  priority: {},\n}\n\nexport const reorderIssuePriority = (priority: Issue['id'][], startIndex: number, endIndex: number) => {\n  const newPriority = [...priority];\n\n  const [ removed ] = newPriority.splice(startIndex, 1);\n  newPriority.splice(endIndex, 0, removed);\n\n  return newPriority;\n}\n\nexport const normalizeIssues = (issues: Issue[]): Record<Issue['id'], Issue> => {\n  const normalized : Record<Issue['id'], Issue> = {};\n\n  return issues.reduce((memo, issue) => {\n    memo[issue.id] = issue;\n    return memo;\n  }, normalized);\n}\n \nconst issues = (state = initialState, action: IssueActions) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_ISSUES:\n      return {...state, isLoading: true }; \n    case ActionTypes.FETCH_ISSUES_SUCCESS:\n      // This is so we can keep our locally set priority.\n      // We wouldn't need this check if we were saving our priority[] back to the server.\n      // If we don't have a priority[], then let's take the ordering returned by the GitHub API.\n      let priority = state.priority[action.payload.repository.id];\n      const hasBeenPrioritized = !isEmpty(priority);\n      \n      priority = hasBeenPrioritized ?\n        priority :\n        action.payload.issues.map((issue) => issue.id);\n\n      return {\n        ...state,\n        isLoading: false,\n        collection: { ...state.collection, [action.payload.repository.id]: normalizeIssues(action.payload.issues) },\n        priority: { ...state.priority, [action.payload.repository.id]: priority }\n      };\n    case ActionTypes.FETCH_ISSUES_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case ActionTypes.REORDER_ISSUE_PRIORITY:\n      const { repository, startIndex, endIndex } = action.payload;\n      return {\n        ...state,\n        priority: {\n          ...state.priority, \n          [repository.id]: reorderIssuePriority(state.priority[repository.id], startIndex, endIndex)\n        }\n      }   \n    default:\n      return state;\n  }\n};\n\nexport default issues;\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk';\nimport throttle from 'lodash/throttle';\n\nimport tokens from './tokens/reducer';\nimport repositories from './repositories/reducer';\nimport issues from './issues/reducer';\nimport { loadState, saveState } from \"./utils/stateStorage\";\n\nconst localStorageState = loadState();\n\nconst rootReducer = combineReducers<State>({\n  tokens,\n  repositories,\n  issues\n});\n\nexport const configureStore = (history: any) => {\n  const store = createStore(rootReducer, localStorageState, applyMiddleware(thunk, routerMiddleware(history)));\n\n  store.subscribe(\n    throttle(() => saveState(store.getState()), 1000)\n  );\n\n  return store;\n}\n","export const saveState = (state: State) => {\n  try {\n    localStorage.setItem('state', JSON.stringify(state));\n  } catch {\n    console.warn('Unable to save state to local storage.');\n  }\n}\n\nexport const loadState = (): State | undefined => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (!serializedState) { return undefined; }\n    \n    return JSON.parse(serializedState);\n  } catch {\n    return undefined;\n  }\n}","import { createMuiTheme } from '@material-ui/core/styles';\nimport { grey, pink } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: pink\n  },\n});\n\nexport default theme;\n","import React, { Component, MouseEvent } from 'react';\nimport { \n  ListItem, \n  ListItemAvatar, \n  ListItemText,\n  ListItemSecondaryAction, \n  Avatar, \n  IconButton,\n} from '@material-ui/core';\nimport KeyIcon from '@material-ui/icons/VpnKey';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport interface TokenItemProps {\n  token: Token;\n  isSelected: boolean;\n  onDelete: (e: MouseEvent<HTMLElement>, id: Token['id']) => void;\n  onSelect: (e: MouseEvent<HTMLElement>, id: Token['id']) => void;\n}\n \n \nclass TokenItem extends Component<TokenItemProps> {\n  render() {\n    const { token, isSelected } = this.props;\n\n    return (\n      <ListItem button selected={isSelected} onClick={this.handleSelect}>\n        <ListItemAvatar>\n          <Avatar>\n            <KeyIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={token.token}\n        />\n        <ListItemSecondaryAction>\n          <IconButton aria-label=\"Delete\" onClick={this.handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  }\n\n  private handleSelect = (e: MouseEvent<HTMLElement>) => {\n    const { token, onSelect } = this.props;\n\n    onSelect(e, token.id);\n  }\n\n  private handleDelete = (e: MouseEvent<HTMLElement>) => {\n    const { token, onDelete } = this.props;\n\n    onDelete(e, token.id);\n  }\n}\n \nexport default TokenItem;\n","import React, { Component, MouseEvent }  from 'react';\nimport { List } from '@material-ui/core';\n\nimport TokenItem from './TokenItem';\n\nexport interface TokenListProps {\n  onSelectToken: (e: MouseEvent<HTMLElement>, id: Token['id']) => void;\n  onDeleteToken: (e: MouseEvent<HTMLElement>, id: Token['id']) => void;\n  tokens: Token[];\n  selectedToken: Token | undefined;\n}\n \nclass TokenList extends Component<TokenListProps> {\n  render() { \n    const { tokens, selectedToken, onSelectToken, onDeleteToken } = this.props;\n\n    return (  \n      <List>\n        {\n          tokens.map((token) => (\n            <TokenItem\n              key={token.id}\n              isSelected={!!selectedToken && selectedToken.id === token.id}\n              token={token}\n              onSelect={onSelectToken}\n              onDelete={onDeleteToken}/>\n          ))\n        }\n      </List>\n    );\n  }\n}\n \nexport default TokenList;\n","import { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n    },\n    form: {\n      display: 'flex',\n      'align-items': 'flex-end',\n      'justify-content': 'space-between',\n      padding: 20,\n    },\n    divider: {\n      margin: '20px 0',\n    },\n    input: {\n      width: '80%'\n    }\n  }\n}\n\nexport default styles;","import { Action, ActionCreatorsMapObject} from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nexport interface ActionWithPayload<T, P> extends Action<T> {\n  payload: P;\n}\n\nexport function createAction<T extends string>(type: T): Action<T>;\nexport function createAction<T extends string, P>(type: T, payload?: P): ActionWithPayload<T, P>;\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === undefined ? { type } : { type, payload };\n}\n\nexport interface ActionWithPayload<T, P> extends Action<T> {\n  payload: P;\n}\nexport type ThunkResult<R> = ThunkAction<R, State, undefined, Action | ActionWithPayload<string, any>>;\n\nexport type ActionsUnion<A extends ActionCreatorsMapObject> = ReturnType<A[keyof A]>;\n","import { ComponentType } from 'react';\nimport { connect} from 'react-redux';\nimport TokenActions from '../../../state/tokens/actions';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: State) => {\n  return {\n    tokens: state.tokens.collection,\n    selectedToken: state.tokens.selectedToken\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\n  return {  \n    addNewToken: (token: Token['token']) => dispatch(TokenActions.addNewToken(token)),\n    selectToken: (id: Token['id']) => dispatch(TokenActions.selectToken(id)),\n    deleteToken: (id: Token['id']) => dispatch(TokenActions.deleteToken(id)),\n  }\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\nexport type WithTokensProps = StateProps & DispatchProps;\n\nexport default <OwnProps extends any, OwnState = void>(Cmp: ComponentType<OwnProps>) =>\n  connect<StateProps, DispatchProps, OwnProps>(\n    mapStateToProps as any,\n    mapDispatchToProps as any,\n  )(Cmp);\n","export const CONFIG = {\n  GITHUB_BASE_URL: 'https://api.github.com'\n}","import Cookies from 'js-cookie';\n\nimport { CONFIG } from './../../constants/config';\n\nclass Fetcher {\n  static fetch(url: string, isAbsoluteUrl: boolean = false, options: RequestInit = {}) {\n    const resourUrl = isAbsoluteUrl ? url : `${CONFIG.GITHUB_BASE_URL}${url}`; \n    return fetch(resourUrl, \n      { \n        ...options, \n        headers: { ...options.headers, Authorization: `token ${Cookies.get('github_token')}` } \n      })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .catch((e) => {\n        console.error(e);\n        throw new Error(e);\n      });\n  }\n}\nexport default Fetcher;\n","import Fetcher from '../utils/fetcher';\n\nconst baseUrl = '/user/repos';\n\nconst Service = {\n  fetchRepositories: async (): Promise<Repository[]> => {\n    return Fetcher.fetch(baseUrl)\n  }\n}\n\nexport default Service;\n","import Fetcher from '../utils/fetcher';\n\nconst basePath = '/issues';\n\nconst Service = {\n  fetchIssues: async (repository: Repository): Promise<Issue[]> => {\n    return Fetcher.fetch(`${repository.url}${basePath}`, true)\n  }\n}\n\nexport default Service;\n","import { RepositoryActions } from './../repositories/actions';\nimport { ThunkResult, ActionsUnion, createAction } from '../utils/actionHelpers';\nimport ActionTypes from './actionTypes';\nimport Service from \"./service\";\nimport { replace } from 'react-router-redux';\n\nconst ActionCreators = {\n  fetchIssues: (repository: Repository) => \n    createAction(ActionTypes.FETCH_ISSUES, { repository }),\n\n  fetchIssuesSuccess: (repository: Repository, issues: Issue[]) =>\n    createAction(ActionTypes.FETCH_ISSUES_SUCCESS, { repository, issues }),\n\n  fetchIssuesError: (repository: Repository, error: Error) =>\n    createAction(ActionTypes.FETCH_ISSUES_ERROR, { repository, error }),\n\n  reorderIssuePriority: (repository: Repository, startIndex: number, endIndex: number) =>\n    createAction(ActionTypes.REORDER_ISSUE_PRIORITY, { repository, startIndex, endIndex })\n}\n\nexport type IssueActions = ActionsUnion<typeof ActionCreators>;\n\nexport const Actions = {\n  ...ActionCreators,\n\n  fetchIssues: (repository: Repository): ThunkResult<Promise<Issue[]>> => async (dispatch, getState) => {\n    let issues: Issue[] = [];\n\n    // In the case of a hard refresh with a selected repo url and we don't have a real selected repo.\n    if (!repository) {\n      dispatch(replace('/repos'));\n      return issues;\n    }\n\n    dispatch(ActionCreators.fetchIssues(repository));\n\n    try {\n      issues = await Service.fetchIssues(repository);\n    } catch (error) {\n      dispatch(ActionCreators.fetchIssuesError(repository, error));\n    }\n\n    dispatch(ActionCreators.fetchIssuesSuccess(repository, issues));\n\n    return issues;\n  },\n}\n\nexport default Actions;\n","import { replace } from 'react-router-redux';\n\nimport { ThunkResult, ActionsUnion, createAction } from '../utils/actionHelpers';\nimport ActionTypes from './actionTypes';\nimport Service from './service';\nimport IssueActions from '../issues/actions';\n\nconst ActionCreators = {\n  selectRepository: (id: Repository['id']) =>\n    createAction(ActionTypes.SELECT_REPOSITORY, { id }),\n\n  fetchRepositories: () => \n    createAction(ActionTypes.FETCH_REPOSITORIES),\n\n  fetchRepositoriesSuccess: (repositories: Repository[]) =>\n    createAction(ActionTypes.FETCH_REPOSITORIES_SUCCESS, { repositories }),\n\n  fetchRepositoriesError: (error: Error) =>\n    createAction(ActionTypes.FETCH_REPOSITORIES_ERROR, { error }),\n}\n\nexport type RepositoryActions = ActionsUnion<typeof ActionCreators>;\n\nexport const Actions = {\n  ...ActionCreators,\n\n  selectRepository: (id: Repository['id']): ThunkResult<void> => \n    (dispatch, getState) => {\n      const repository = getState().repositories.collection.find((repository) => repository.id === id) as Repository;\n\n      dispatch(IssueActions.fetchIssues(repository));\n\n      dispatch(replace(`/repos/${repository.id}/issues`));\n\n      return dispatch(ActionCreators.selectRepository(id));\n    },\n\n  fetchRepositories: (): ThunkResult<Promise<Repository[]>> => async (dispatch, getState) => {\n    dispatch(ActionCreators.fetchRepositories());\n    let repositories: Repository[] = [];\n\n    try {\n      repositories = await Service.fetchRepositories();\n    } catch (error) {\n      dispatch(ActionCreators.fetchRepositoriesError(error));\n    }\n\n    dispatch(ActionCreators.fetchRepositoriesSuccess(repositories));\n\n    return repositories;\n  },\n}\n\nexport default Actions;\n","import Cookies from 'js-cookie';\n\nimport { createAction, ThunkResult, ActionsUnion } from \"../utils/actionHelpers\";\nimport ActionTypes from './actionTypes';\nimport { Actions as RepositoryActions } from '../repositories/actions';\nimport { replace } from 'react-router-redux';\n\n\nconst ActionCreators = {\n  addNewToken: (token: Token['token']) => createAction(ActionTypes.ADD_NEW_TOKEN, { token }),\n  selectToken: (id: Token['id']) => createAction(ActionTypes.SELECT_TOKEN, { id }),\n  deleteToken: (id: Token['id']) => createAction(ActionTypes.DELETE_TOKEN, { id }),\n}\n\nexport type TokenActions = ActionsUnion<typeof ActionCreators>;\n\nexport const Actions = {\n  ...ActionCreators,\n\n  addNewToken: (token: Token['token']): ThunkResult<void> => (dispatch, getState) => {\n    const hasSelectedToken = !!getState().tokens.selectedToken;\n\n    if (!hasSelectedToken) {\n      dispatch(ActionCreators.addNewToken(token));\n      dispatch(Actions.selectToken(getState().tokens.collection[0].id));\n    } else {\n      return ActionCreators.addNewToken(token);\n    }\n  },\n\n  selectToken: (id: Token['id']): ThunkResult<void> => (dispatch, getState) => {\n    const { collection } = getState().tokens;\n    const selectedToken = collection.find((token) => token.id === id) as Token;\n\n    // Using a cookie because it's probably more realistic that \n    // any AJAX calls would reference the cookie for authentication\n    Cookies.set('github_token', selectedToken.token);\n\n    dispatch(replace('/repos'));\n\n    dispatch(RepositoryActions.fetchRepositories());\n\n    return ActionCreators.selectToken(id);\n  },\n}\n\nexport default Actions;\n","import React, { Component, ChangeEvent, MouseEvent, FormEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport { Button, Divider, withStyles, WithStyles } from '@material-ui/core';\nimport TokenList from './TokenList';\nimport styles from './styles/TokenDialog';\nimport WithTokens, { WithTokensProps } from './containers/WithTokens';\n\nexport interface TokenDialogState {\n  newToken: string;\n}\n\nclass TokenDialog extends Component<\n  WithTokensProps &\n  RouteComponentProps &\n  WithStyles, \n  TokenDialogState\n> {\n\n  public state: TokenDialogState = {\n    newToken: '',\n  };\n\n  render() {\n    const { tokens, selectedToken, classes } = this.props;\n    const { newToken } = this.state;\n\n    return (\n      <Dialog open={this.isOpen} onClose={this.handleClose} className={classes.root} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Set GitHub API Token</DialogTitle>\n        <form className={classes.form} onSubmit={this.handleAddToken}>\n          <TextField className={classes.input} value={newToken} label=\"GitHub Token\" onChange={this.handleChange}/>\n          <Button type=\"primary\" variant=\"outlined\">Add</Button>\n        </form>\n        <Divider className={classes.divider}/>\n        <TokenList\n          tokens={tokens}\n          selectedToken={selectedToken}\n          onSelectToken={this.handleSelect}\n          onDeleteToken={this.handleDelete}\n        />\n      </Dialog>\n    );\n  }\n\n  private get isOpen() {\n    const { location: { search } } = this.props;\n\n    return search.includes('change-token');\n  }\n\n  private handleClose = () => {\n    const { history, location } = this.props;\n    const newSearch = location.search.replace('change-token', '');\n\n    history.replace({\n      pathname: location.pathname,\n      search: newSearch,\n    })\n  }\n\n  private handleAddToken = (e: FormEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    const { addNewToken } = this.props;\n\n    addNewToken(this.state.newToken);\n    this.setState({ newToken: '' });\n  }\n\n  private handleSelect = (e: MouseEvent<HTMLElement>, id: Token['id']) => {\n    const { selectToken } = this.props;\n\n    selectToken(id);\n\n    this.handleClose();\n  }\n\n  private handleDelete = (e: MouseEvent<HTMLElement>, id: Token['id']) => {\n    const { deleteToken } = this.props;\n\n    deleteToken(id);\n  }\n\n  private handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newToken: e.target.value })\n  }\n}\n\nexport default withRouter(withStyles(styles)(WithTokens(TokenDialog)));\n","import { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    tokenButton: {\n      \n    }\n  }\n}\n\nexport default styles;","import React, { Component, CSSProperties } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { AppBar, Typography, Button, Toolbar, Link } from '@material-ui/core';\nimport { withStyles, WithStyles } from '@material-ui/core/styles';\nimport TokenDialog from '../tokens/TokenDialog';\nimport styles from './styles/Header';\n \nclass Header extends Component<WithStyles> {\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <AppBar>\n        <Toolbar className={classes.root}>\n          <Typography variant=\"h6\" color=\"inherit\">GitHub Issue Prioritizer</Typography>\n          <Button\n            variant=\"outlined\" \n            color=\"inherit\"\n            component={(props: any) => <RouterLink to=\"?change-token\" {...props}/>}\n          >\n            Set API Token\n          </Button>\n          <TokenDialog {...{} as any}/>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n \nexport default withStyles(styles)(Header);\n","import React, { Component, ComponentType } from 'react';\nimport { connect } from 'react-redux';\nimport RepositoryActions from '../../../state/repositories/actions';\nimport { Dispatch } from 'redux';\nimport isEmpty from 'lodash/isEmpty';\n\nconst mapStateToProps = (state: State) => {\n  const selectedRepository= state.repositories.selectedRepository;\n\n  return {\n    repositories: state.repositories.collection,\n    selectedRepository,\n    isLoadingIssues: state.issues.isLoading,\n    hasIssues: !!(selectedRepository && !isEmpty(state.issues.priority[selectedRepository.id]))\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\n  return {\n    fetchRepositories: () => dispatch(RepositoryActions.fetchRepositories()),\n    selectRepository: (id: Repository['id']) => dispatch(RepositoryActions.selectRepository(id)),\n  }\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\nexport type WithRepositoriesProps = StateProps & DispatchProps;\n\nconst Fetcher = <T extends any, S = void>(Cmp: ComponentType<any>): ComponentType<T & WithRepositoriesProps> =>\n  class extends Component<T & WithRepositoriesProps, S> {\n    public componentDidMount() {\n      this.props.fetchRepositories();\n    }\n\n    public render() {\n      return <Cmp {...this.props} />;\n    }\n  };\n\nexport default <OwnProps extends any, OwnState = void>(Cmp: ComponentType<OwnProps>) =>\n  connect<StateProps, DispatchProps, OwnProps>(\n    mapStateToProps as any,\n    mapDispatchToProps as any,\n  )(Fetcher(Cmp));\n","import React, { Component, MouseEvent } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\n\nimport { ListItem, ListItemText, ListItemAvatar, Avatar, CircularProgress } from '@material-ui/core';\n\n\n\nexport interface RepositoryListItemProps {\n  repository: Repository;\n  onSelect: (id: Repository['id'], repositoryUrl: Repository['url']) => void;\n  selectedRepository: Repository | undefined;\n  isLoadingIssues: boolean;\n}\n\nclass RepositoryListItem extends Component<RepositoryListItemProps & RouteComponentProps> {\n  public render() {\n    const { repository, isLoadingIssues } = this.props;\n\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        button onClick={this.handleSelect}\n        selected={this.isSelected}\n      >\n        <ListItemAvatar>\n          <Avatar alt={repository.owner.login} title={repository.owner.login} src={repository.owner.avatar_url} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={repository.name}\n          secondary={repository.description}\n        />\n        {(this.isSelected && isLoadingIssues) && <CircularProgress color=\"secondary\" />}\n      </ListItem>\n    );\n  }\n\n  private get isSelected() {\n    const { repository, selectedRepository } = this.props;\n\n    return repository.id === (selectedRepository && selectedRepository.id);\n  }\n\n  private handleSelect = (e: MouseEvent<HTMLElement>) => {\n    const { onSelect, repository, history } = this.props;\n\n    onSelect(repository.id, repository.url);\n  }\n}\n\nexport default withRouter(RepositoryListItem);\n","import { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n      width: '100%',\n      transition: 'width 350ms ease',\n      borderRight: '1px solid #eee',\n    },\n    hasIssues: {\n      width: '50%'\n    },\n  };\n}\n\nexport default styles;\n","import React, { Component, ComponentType } from 'react';\nimport { connect } from 'react-redux';\nimport IssueActions from '../../../state/issues/actions';\nimport { Dispatch } from 'redux';\nimport { RouteComponentProps } from 'react-router';\n\nconst mapStateToProps = (state: State, ownProps: RouteComponentProps<{repository_id: string}>) => {\n  const repository = state.repositories.collection.find(\n    (repository) => `${repository.id}` === ownProps.match.params.repository_id\n  );\n\n  const priority = repository ? state.issues.priority[repository.id] : [];\n  const issues = repository ? state.issues.collection[repository.id] : {};\n\n  return {\n    issues,\n    priority,\n    isLoadingIssues: state.issues.isLoading,\n    repository,\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\n  return {\n    fetchIssues: (repository: Repository) => dispatch(IssueActions.fetchIssues(repository)),\n    reorderIssuePriority: (repository: Repository, startIndex: number, endIndex: number) =>\n      dispatch(IssueActions.reorderIssuePriority(repository, startIndex, endIndex)),\n  }\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\nexport type WithIssuesProps = StateProps & DispatchProps;\n\nconst Fetcher = <T extends any, S = void>(Cmp: ComponentType<any>): ComponentType<T & WithIssuesProps> =>\n  class extends Component<T & WithIssuesProps, S> {\n    public componentDidMount() {\n      this.props.fetchIssues(this.props.repository);\n    }\n\n    public render() {\n      return <Cmp {...this.props} />;\n    }\n  };\n\nexport default <OwnProps extends any, OwnState = void>(Cmp: ComponentType<OwnProps>) =>\n  connect<StateProps, DispatchProps, OwnProps>(\n    mapStateToProps as any,\n    mapDispatchToProps as any,\n  )(Fetcher(Cmp));\n","import { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n      transition: 'opacity 300ms ease',\n    },\n    isDragging: {\n      opacity: 0.5,\n    },\n    secondaryText: {\n      margin: '2px 0 0 0',\n    },\n    body: {\n      fontSize: '12px',\n    },\n    createdAt: {\n      fontSize: '12px',\n    },\n    updatedAt: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  };\n}\n\nexport default styles;\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport { ListItem, ListItemText, ListItemAvatar, Avatar, Typography, withStyles, WithStyles } from '@material-ui/core';\nimport FaceIcon from '@material-ui/icons/Face';\n\nimport styles from './styles/ListItem';\n\nexport interface IssueListItemProps {\n  issue: Issue;\n}\n\nclass IssueListItem extends Component<IssueListItemProps & WithStyles> {\n  public render() {\n    const { issue, classes } = this.props;\n\n    return (\n      <ListItem\n        component=\"div\"\n        alignItems=\"flex-start\"\n      >\n        {this.renderAssignee()}\n        <ListItemText\n          primary={issue.title}\n          secondary={this.renderSecondaryText()}\n        />\n        <ListItemText\n          className={classes.updatedAt}\n          secondary={this.updatedAtText}\n        />\n      </ListItem>\n    );\n  }\n\n  private get createdAtText() {\n    const { issue } = this.props;\n    const date = moment(issue.created_at).format('MM/DD/YYYY');\n\n    return `Created on: ${date}`;\n  }\n\n  private get updatedAtText() {\n    const { issue } = this.props;\n    const relativeDate = moment(issue.updated_at).fromNow();\n\n    return `Updated ${relativeDate}.`;\n  }\n\n  private renderSecondaryText() {\n    const { issue, classes } = this.props;\n    return (\n      <span className={classes.secondaryText}>\n        <span className={classes.createdAt}>{this.createdAtText}</span>\n        <Typography className={classes.body} component=\"span\" color=\"textPrimary\">{issue.body}</Typography>\n      </span>\n    )\n  }\n\n  private renderAssignee() {\n    const { issue } = this.props;\n\n    let { login, avatar_url: avatarUrl } = issue.assignee || { login: 'Unasssigned', avatar_url: '' } as Owner;\n\n\n    return (\n      <ListItemAvatar>\n        {\n          avatarUrl ?\n            <Avatar alt={login} title={login} src={avatarUrl} /> :\n            <Avatar alt={login} title={login}>\n              <FaceIcon />\n            </Avatar>\n        }\n      </ListItemAvatar>\n    )\n  }\n}\n\nexport default withStyles(styles)(IssueListItem);\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\n\nimport { withStyles, WithStyles } from '@material-ui/core';\n\nimport styles from './styles/ListItem';\nimport IssueListItem from './IssueListItem';\n\nexport interface DraggableIssueListItemProps {\n  issue: Issue;\n  index: number;\n}\n\nclass DraggableIssueListItem extends Component<DraggableIssueListItemProps & WithStyles> {\n  public render() {\n    const { issue, index } = this.props;\n\n    return (\n      <Draggable key={issue.id} draggableId={`${issue.id}`} index={index}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={this.getClassName(snapshot.isDragging)}\n          >\n            <IssueListItem issue={issue}/>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n\n  private getClassName = (isDragging: boolean) => {\n    const { classes } = this.props;\n    \n    return cn(classes.root, { [classes.isDragging]: isDragging });\n  }\n}\n\nexport default withStyles(styles)(DraggableIssueListItem);\n","import { CSSProperties } from 'react';\nimport { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n      transition: 'border 300ms ease',\n      border: '1px dashed transparent',\n      margin: '30px 20px 20px 20px',\n      position: 'relative' as CSSProperties['position']\n    },\n    hasIssues: {\n      width: '50%'\n    },\n    isDraggingOver: {\n      borderColor: theme.palette.secondary.light\n    },\n    reorderingHelperText: {\n      position: 'absolute' as CSSProperties['position'],\n      top: '-25px',\n      left: '0px',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    reorderingHelperIcon: {\n      marginRight: '5px'\n    }\n  };\n}\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { List, WithStyles, withStyles, Typography } from '@material-ui/core';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\nimport InfoIcon from '@material-ui/icons/Info';\nimport cn from 'classnames';\nimport isEmpty from 'lodash/isEmpty';\n\nimport WithIssues, { WithIssuesProps } from './containers/WithIssues';\nimport DraggableIssueListItem from './DraggableIssueListItem';\n\nimport styles from './styles/ListView';\n\nclass IssuesListView extends Component<\n  WithIssuesProps &\n  WithStyles\n> {\n  public render() { \n    const { issues, priority, classes } = this.props;\n\n    if (isEmpty(priority)) { return null; }\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              className={this.getClassName(snapshot.isDraggingOver)}\n            >\n              <Typography variant=\"caption\" className={classes.reorderingHelperText}>\n                <InfoIcon className={classes.reorderingHelperIcon} color=\"secondary\"/>\n                Drag &amp; drop issues to reorder their priority.\n              </Typography>\n              <List>\n                {\n                  priority.map((id: Issue['id'], index) => \n                    <DraggableIssueListItem\n                      key={id}\n                      issue={issues[id]}\n                      index={index}\n                    />\n                    )\n                  }\n              </List>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n\n  private getClassName = (isDraggingOver: boolean) => {\n    const { classes } = this.props;\n\n    return cn(classes.root, { [classes.isDraggingOver]: isDraggingOver, [classes.hasIssues]: this.hasIssues });\n  }\n\n  private onDragEnd = (result: DropResult) => {\n    const { reorderIssuePriority, repository } = this.props;\n\n    if (!repository) { return; }\n\n    if (!result.destination) { return;}\n\n    reorderIssuePriority(repository, result.source.index, result.destination.index);\n  }\n\n  private get hasIssues() {\n    const { priority } = this.props;\n\n    return !!priority.length;\n  }\n}\n \nexport default withStyles(styles)(WithIssues(IssuesListView));","import { CSSProperties } from 'react';\nimport { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n      margin: '100px auto 0 auto',\n      padding: '50px',\n      display: 'flex',\n      width: '80%',\n      height: '50%',\n      justifyContent: 'center'\n    },\n    emptyStateCardContent: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column' as CSSProperties['flexDirection']\n    },\n    emptyStateCardIcon: {\n      margin: '0 0 20px 0'\n    }\n  };\n}\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { Card, CardContent, Avatar, Typography, WithStyles, withStyles } from '@material-ui/core';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport styles from './styles/EmptyState';\n\nexport interface EmptyStateProps {\n  text: string; \n}\n \nclass EmptyState extends Component<EmptyStateProps & WithStyles> {\n  render() {\n    const { text, classes } = this.props;\n\n    return (  \n      <Card className={classes.root}>\n        <CardContent className={classes.emptyStateCardContent}>\n          <Avatar className={classes.emptyStateCardIcon}>\n            <WarningIcon />\n          </Avatar>\n          <Typography variant=\"subheading\">{text}</Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n \nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\nimport { List, withStyles, WithStyles } from '@material-ui/core';\nimport cn from 'classnames';\n\nimport WithRepositories, { WithRepositoriesProps } from './containers/WithRepositories';\nimport RepositoryListItem from './RepositoryListItem';\n\nimport styles from './styles/ListView';\nimport { Route, withRouter, RouteComponentProps } from 'react-router';\nimport IssuesListView from '../issues/IssuesListView';\nimport EmptyState from '../common/EmptyState';\n \nclass RepositoriesListView extends Component<\n  WithRepositoriesProps &\n  WithStyles &\n  RouteComponentProps\n> {\n  public componentDidMount() {\n    const { selectedRepository, history } = this.props;\n\n    if (selectedRepository) {\n      history.replace(`/repos/${selectedRepository.id}/issues`);\n    }\n  }\n\n  public render() { \n    const { repositories, selectRepository, selectedRepository, isLoadingIssues, classes } = this.props;\n\n    if (!repositories) {\n      return <EmptyState text=\"No repositories found. Please add your GitHub API token.\"/>\n    }\n\n    return (\n      <>\n        <List className={cn(classes.root, {[classes.hasIssues]: this.hasIssues})}>\n          {\n            repositories.map((repository) =>\n            <RepositoryListItem\n              key={repository.id}\n              repository={repository}\n              onSelect={selectRepository}\n              selectedRepository={selectedRepository}\n              isLoadingIssues={isLoadingIssues}\n            />\n            )\n          }\n        </List>\n        <Route path=\"/repos/:repository_id/issues\" component={IssuesListView} />\n      </>\n    );\n  }\n\n  private get hasIssues() {\n    const { isLoadingIssues, hasIssues } = this.props;\n\n    return !isLoadingIssues && hasIssues;\n  }\n}\n \nexport default withRouter(withStyles(styles)(WithRepositories(RepositoriesListView)));","import { Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => {\n  return {\n    root: {\n    },\n    contentContainer: {\n      display: 'flex',\n      margin: '75px 0 0 0',\n      border: '1px solid #eee',\n      minHeight: '100vh',\n    }\n  };\n}\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch, Router } from \"react-router-dom\";\nimport { MuiThemeProvider, withStyles, WithStyles} from '@material-ui/core';\nimport { createBrowserHistory } from 'history';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../state/store';\n\nimport theme from './common/Theme';\n\nimport Header from './common/Header';\nimport RepositoriesListView from './repositories/RepositoriesListView';\n\nimport appStyles from './AppStyles';\n\nconst history = createBrowserHistory();\nconst store = configureStore(history);\n\nclass App extends Component<WithStyles> {\n  public render() {\n    const { classes } = this.props;\n    return (\n      <Router history={history}>\n        <Provider store={store}>\n          <MuiThemeProvider theme={theme}>\n              <Header/>\n              <main className={classes.contentContainer}>\n                <Switch>\n                  <Route path=\"/repos\" component={RepositoriesListView}/>\n\n                  <Redirect from=\"/\" to=\"/repos\"/>\n                </Switch>\n              </main>\n          </MuiThemeProvider>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(appStyles )(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}